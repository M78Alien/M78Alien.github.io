<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小迪安全 Day01基础入门-概念名词</title>
      <link href="/2023/08/28/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day01%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%A6%82%E5%BF%B5%E5%90%8D%E8%AF%8D/"/>
      <url>/2023/08/28/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day01%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%A6%82%E5%BF%B5%E5%90%8D%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="概念名词"><a href="#概念名词" class="headerlink" title="概念名词"></a>概念名词</h1><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><h3 id="什么是域名"><a href="#什么是域名" class="headerlink" title="什么是域名"></a>什么是域名</h3><p>相当于网站的名字维基百科对域名的解释是：互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位（有时也指地理位置）。<br>网域名称系统（Domain Name System）有时也简称为域名（DNS），是互联网的一项核心服务，它作为可以将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网，而不用去记住能够被机器直接读取的 IP 地址数据串。</p><h3 id="域名在哪里注册？"><a href="#域名在哪里注册？" class="headerlink" title="域名在哪里注册？"></a>域名在哪里注册？</h3><ol><li>Godaddy</li><li>Gandi</li><li>Hover</li><li>Namesilo</li><li>Namecheap</li><li>万网</li></ol><h3 id="什么是二级域名多级域名？"><a href="#什么是二级域名多级域名？" class="headerlink" title="什么是二级域名多级域名？"></a>什么是二级域名多级域名？</h3><ol><li>顶级域名:又叫一级域名,一串字符串中间一个点隔开,例如 baidu.com。顶级域名是互联网DNS等级之中的最高级的域,它保存于DNS根域的名字空间中。</li><li>二级域名:实际上就是一个一级域名以下的主机名,一串字符串中间两个“.”隔开,例如 <a href="http://www.baidu.com/">www.baidu.com</a> 。二级域名就是最靠近顶级域名左侧的字段。</li><li>三级域名:二级域名的子域名,特征是包含三个“.”,例如___.___.baidu.com…</li></ol><h3 id="域名发现对于安全测试意义？"><a href="#域名发现对于安全测试意义？" class="headerlink" title="域名发现对于安全测试意义？"></a>域名发现对于安全测试意义？</h3><p>进行渗透测试时，其主域名找不到漏洞时，就可以尝试去测试收集到的子域名，有可能测试子域名网站时会有意向不到的效果，然后可以由此横向到主网站。</p><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><h3 id="什么是DNS？"><a href="#什么是DNS？" class="headerlink" title="什么是DNS？"></a>什么是DNS？</h3><p>域名系统(Domain Name System,DNS)是Internet上解决网上机器命名的一种系统。 就像拜访朋友要先知道别人家怎么走一样，Internet上当一台主机要访问另外一台主机时，必须首先获知其地址，TCP&#x2F;IP中的IP地址是由四段以“.”分开的数字组成(此处以IPv4的地址为例，IPv6的地址同理)，记起来总是不如名字那么方便，所以，就采用了域名系统来管理名字和IP的对应关系。</p><h3 id="本地Hosts与DNS的关系"><a href="#本地Hosts与DNS的关系" class="headerlink" title="本地Hosts与DNS的关系"></a>本地Hosts与DNS的关系</h3><ol><li>Hosts文件主要作用是定义IP地址和主机名的映射关系，是一个映射IP地址和主机名的规定。</li><li>Hosts是一个没有扩展名的系统文件，可以用记事本等工具打开，其作用就是将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS域名解析服务器进行IP地址的解析。</li><li>浏览器访问网站，要首先通过DNS服务器把要访问的网站域名解析成一个唯一的IP地址，之后，浏览器才能对此网站进行定位并且访问其数据。<br><strong>如何查看本地Hosts文件：</strong></li><li><code>Win</code> + <code>R</code>：打开运行输入<code>drivers</code></li><li>输入：<code>c:\windows\system32\drivers\etc</code></li><li>选择使用<code>记事本</code>或者<code>Notepad</code>、<code>Vs Code</code> 等编程软件打开<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-28%20143352.png" alt="截图"></li></ol><h3 id="CDN是什么？与DNS的关系？"><a href="#CDN是什么？与DNS的关系？" class="headerlink" title="CDN是什么？与DNS的关系？"></a>CDN是什么？与DNS的关系？</h3><ol><li>CDN的全称是Content DeliveryNetwork，即内容分发网络。</li><li>CDN的基本思路：是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。</li><li>通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上（单纯只使用DNS解析，直接PING就会显示出自己的真实IP,如果又使用CDN，PING出来的IP就不是用户的真实IP而是CDN服务器的IP节点。需要绕过CDN后去找真实IP地址。</li><li>使用CDN的目的：是使用户可就近取得所需内容，解决Internet网络拥挤的状况，提高用户访问网站的响应速度。<br>通过超级ping的网站可以看到CDN的解析情况<a href="https://www.ping.cn/ping/cdivtc.com">https://www.ping.cn/ping/cdivtc.com</a><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-28%20144311.png" alt="截图"><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-28%20144614.png" alt="截图"></li></ol><h3 id="常见的DNS安全攻击有哪些？"><a href="#常见的DNS安全攻击有哪些？" class="headerlink" title="常见的DNS安全攻击有哪些？"></a>常见的DNS安全攻击有哪些？</h3><h4 id="DDOS"><a href="#DDOS" class="headerlink" title="DDOS"></a>DDOS</h4><p>DDoS攻击也叫做分布式拒绝服务攻击，可以使很多的计算机在同一时间遭受到攻击，使攻击的目标无法正常使用。攻击者可以伪造自己的DNS服务器地址，同时发送大量请求给其他服务器。其他服务器的回复会被发送到被伪造服务器的真实地址，造成该服务器无法处理请求而崩溃。攻击者同样可以通过利用DNS协议中存在的漏洞，恶意创造一个载荷过大的请求，造成目标DNS服务器崩溃。</p><h4 id="DNS缓存中毒"><a href="#DNS缓存中毒" class="headerlink" title="DNS缓存中毒"></a>DNS缓存中毒</h4><p>DNS缓存中毒攻击者给DNS服务器注入非法网络域名地址，如果服务器接受这个非法地址，那说明其缓存就被攻击了，而且以后响应的域名请求将会受黑客所控。当这些非法地址进入服务器缓存，用户的浏览器或者邮件服务器就会自动跳转到DNS指定的地址。这种攻击往往被归类为域欺骗攻击(pharming attack)，由此它会导致出现很多严重问题。首先，用户往往会以为登陆的是自己熟悉的网站，而它们却并不是。与钓鱼攻击采用非法URL不同的是，这种攻击使用的是合法的URL地址。</p><h4 id="域名劫持（DNS重定向）"><a href="#域名劫持（DNS重定向）" class="headerlink" title="域名劫持（DNS重定向）"></a>域名劫持（DNS重定向）</h4><p>域名劫持是通过攻击域名解析服务器（DNS），或伪造域名解析服务器（DNS）的方法，把目标网站域名解析到错误的地址从而实现用户无法访问目标网站的目的。域名劫持一方面可能影响用户的上网体验，用户被引到假冒的网站进而无法正常浏览网页，而用户量较大的网站域名被劫持后恶劣影响会不断扩大；另一方面用户可能被诱骗到冒牌网站进行登录等操作导致泄露隐私数据。</p><h4 id="DNS查询嗅探"><a href="#DNS查询嗅探" class="headerlink" title="DNS查询嗅探"></a>DNS查询嗅探</h4><ol><li>攻击者主要利用对DNS的配置信息获取网络环境的信息，为之后的攻击做好的准备。</li><li>针对这些情况，我们需要对DNS服务器需要采取特别的安全保护措施，在防火墙网络中，分开设置内部DNS服务器和外部DNS服务器，连接外部服务的外部DNS服务器上不留有对外禁止访问的内部网络系统的服务器，做到内外网络服务器分割。</li></ol><h4 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h4><ol><li>ARP攻击就是通过伪造IP地址和MAC地址实现ARP欺骗，能够在网络中产生大量的ARP通信量使网络阻塞，攻击者只要持续不断的发出伪造的ARP响应包就能更改目标主机ARP缓存中的IP-MAC条目，造成网络中断或中间人攻击。ARP攻击主要是存在于局域网网络中，局域网中若有一台计算机感染ARP病毒，则感染该ARP病毒的系统将会试图通过”ARP欺骗”手段截获所在网络内其它计算机的通信信息，并因此造成网内其它计算机的通信故障。</li><li>ARP欺骗通常是在用户局网中，造成用户访问域名的错误指向。如果IDC机房也被ARP病毒入侵后，则也可能出现攻击者采用ARP包压制正常主机、或者压制DNS服务器，以使访问导向错误指向的情况。</li></ol><h4 id="本机劫持"><a href="#本机劫持" class="headerlink" title="本机劫持"></a>本机劫持</h4><p>本机的计算机系统被木马或流氓软件感染后，也可能会出现部分域名的访问异常。</p><h2 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h2><h3 id="常见脚本语言"><a href="#常见脚本语言" class="headerlink" title="常见脚本语言"></a>常见脚本语言</h3><ol><li>一种介乎于 <code>HTML</code> 和诸如 <code>Java</code> 、 <code>Visual Basic</code> 、 <code>C++</code>等编程语言之间的一种特殊的语言。</li><li>尽管它更接近后者，但它却不具有编程语言复杂、严谨的语法和规则。</li><li>常见的脚本语言有：<code>Python</code>、<code>JavaScript</code>、<code>Asp</code> (逐渐淘汰，基本都是小站点在使用)、<code>Aspx</code>、<code>PHP</code> （目前比较流行）<code>javaweb</code>、 <code>pl</code>、<code>cgi</code>等</li></ol><h3 id="不同脚本类型与安全漏洞的关系"><a href="#不同脚本类型与安全漏洞的关系" class="headerlink" title="不同脚本类型与安全漏洞的关系"></a>不同脚本类型与安全漏洞的关系</h3><ul><li>不同的脚本语言的编写规则不一样，程序产生的漏洞自然也不一样（代码审计）。</li></ul><h3 id="漏洞挖掘代码审计与脚本类型的关系"><a href="#漏洞挖掘代码审计与脚本类型的关系" class="headerlink" title="漏洞挖掘代码审计与脚本类型的关系"></a>漏洞挖掘代码审计与脚本类型的关系</h3><ul><li>漏洞挖掘代码审计：要熟悉相关代码和相关逻辑机制</li></ul><h2 id="后门"><a href="#后门" class="headerlink" title="后门"></a>后门</h2><h3 id="什么是后门？有那些后门？"><a href="#什么是后门？有那些后门？" class="headerlink" title="什么是后门？有那些后门？"></a>什么是后门？有那些后门？</h3><ol><li>在信息安全领域，后门是指绕过安全控制而获取对程序或系统访问权的方法。</li><li>后门的最主要目的就是方便以后再次秘密进入或者控制系统。</li></ol><h3 id="后门的分类"><a href="#后门的分类" class="headerlink" title="后门的分类"></a>后门的分类</h3><ol><li><p>网页后门 ：<br> 此类后门程序一般都是服务器上正常 的web服务来构造自己的连接方式，比如现在非常流行的ASP、cgi脚本后门等。</p></li><li><p>线程插入后门：<br> 利用系统自身的某个服务或者线程，将后门程序插入到其中，具体原理原来《黑客防线》曾具体讲解过，感兴趣的朋友可以查阅。这也是现在最流行的一个后门技术。</p></li><li><p>扩展后门：<br> 所谓的“扩展”，是指在功能上有大的提升，比普通的单一功能的后门有很强的使用性，这种后门本身就相当于一个小的安全工具包，能实现非常多的常驻见安全功能，适合新手使用————但是，功能越强，个人觉得反而脱郭后门“隐蔽”的初衷，具体看法就看各位使用都的喜好了。</p></li><li><p>C&#x2F;S后门（客户端服务器后门）：<br> 和传统的木马程序类似的控制方法，采用“客记端&#x2F;服务端”的控制方式，通过某种特定的访问方式来启动后门进而控制服务器。</p></li></ol><h3 id="后门在安全测试中的实际意义"><a href="#后门在安全测试中的实际意义" class="headerlink" title="后门在安全测试中的实际意义"></a>后门在安全测试中的实际意义</h3><ol><li>方便下次更方便的进来。</li><li>获取到相关权限之后，后门相当于一个管道，便于操作。</li><li>即使管理员通过改变所有密码之类的方法来提高安全性，仍然能再次侵入，使再次侵入被发现的可能性减至最低。</li><li>大多数后门设法躲过日志，大多数情况下即使入侵者正在使用系统也无法显示他已在线。</li></ol><h3 id="关于后门需要了解那些？-玩法，免杀"><a href="#关于后门需要了解那些？-玩法，免杀" class="headerlink" title="关于后门需要了解那些？(玩法，免杀)"></a>关于后门需要了解那些？(玩法，免杀)</h3><ol><li><p>玩法（创建后门之后我们可以怎么样操作？）<br> 网站后门：便于控制网站<br> 软件后门：用于控制<br> 服务器后门：可以进行脱库、盗取信息</p></li><li><p>免杀技术全称为反杀毒技术Anti Anti-Virus简称“免杀”，它指的是一种能使病毒木马免于被杀毒软件查杀的技术。</p></li><li><p>由于免杀技术的涉猎面非常广，其中包含反汇编、逆向工程、系统漏洞等黑客技术，所以难度很高，一般人不会或没能力接触这技术的深层内容。</p></li><li><p>其内容基本上都是修改病毒、木马的内容改变特征码，从而躲避了杀毒软件的查杀。</p></li><li><p>后门需要掌握的核心技能，防止杀毒软件检查到</p></li></ol><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="web的组成框架模型"><a href="#web的组成框架模型" class="headerlink" title="web的组成框架模型"></a>web的组成框架模型</h3><ul><li>WEB的组成框架模型：网站原码、操作系统、中间件（搭建平台，提供服务的）、数据库。<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/web%E7%9A%84%E7%BB%84%E6%88%90%E6%A1%86%E6%9E%B6.png" alt="Web的组成框架"></li></ul><h3 id="架构漏洞安全测试的简要测试"><a href="#架构漏洞安全测试的简要测试" class="headerlink" title="架构漏洞安全测试的简要测试"></a>架构漏洞安全测试的简要测试</h3><ol><li><p>通信层<br> 主要测试通信协议的安全，系统开放的端口，其中操作系统提供网络层和数据链路层协议，存在问题的可能性较小，一般关注开源协议已存在漏洞即可，无需重点关注。应用层服务与协议一般由产品形态决定，产品中可以自定义配置相关协议与参数，需要重点关注与测试。</p></li><li><p>应用层<br> 应用层包含开发人员开发代码，为整个安全测试的核心模块。主要包括web安全测试，源码安全测试。其中web安全测试从web访问服务的维度，偏向黑盒，进行安全测试。源码安全测试从代码的维度，偏向白盒，进行安全测试。</p></li><li><p>系统层<br> 主要测试操作系统安全，数据库服务安全，web服务器安全，以及其他一些中间件的安全。</p></li><li><p>管理层<br> 主要包括产品资料的安全测试，安全策略制定，协调各个层面的安全测试以及安全风险的整体评估。</p></li></ol><h3 id="为什么要从web界面为主"><a href="#为什么要从web界面为主" class="headerlink" title="为什么要从web界面为主"></a>为什么要从web界面为主</h3><p>因为web使用方面广 。从web方向先入手，一步一步的获取最高权限。</p><h2 id="Web相关漏洞"><a href="#Web相关漏洞" class="headerlink" title="Web相关漏洞"></a>Web相关漏洞</h2><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/web%E6%BC%8F%E6%B4%9E.png" alt="Web相关漏洞"></p><h2 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h2><h3 id="多级域名的枚举查找"><a href="#多级域名的枚举查找" class="headerlink" title="多级域名的枚举查找"></a>多级域名的枚举查找</h3><ul><li>layer子域名探测<br>链接：<a href="https://pan.baidu.com/s/1YFu9V0WtdG905eaVFNFa0A">https://pan.baidu.com/s/1YFu9V0WtdG905eaVFNFa0A</a><br>提取码：zkaq<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-28%20201908.png" alt="layer子域名挖掘机"></li></ul><hr><p>笔记内容参考自<a href="https://www.yuque.com/weiker/xiaodi">小迪安全</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 小迪安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有关于我的</title>
      <link href="/2023/08/25/%E6%9C%89%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84/"/>
      <url>/2023/08/25/%E6%9C%89%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<h1 id="有关于我的"><a href="#有关于我的" class="headerlink" title="有关于我的"></a>有关于我的</h1><hr><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E6%A2%A6%E6%AF%94%E4%BC%98%E6%96%AF.jpg" alt="Alien"></p><blockquote><p>永远相信美好的事情即将发生，因为追求源于热爱！</p></blockquote><h3 id="关于Alien"><a href="#关于Alien" class="headerlink" title="关于Alien"></a>关于Alien</h3><p>你好，我叫Alien，是个在校大学生，开发者，2021年开始学习相关开发知识。</p><ul><li><strong>就读院校：</strong> 东莞理工学院（是本科！！！）</li><li><strong>本科专业：</strong> 网络空间安全</li><li><strong>个人爱好：</strong> 听歌、看电影、奥特曼、游戏</li></ul><h3 id="细说个人爱好"><a href="#细说个人爱好" class="headerlink" title="细说个人爱好"></a>细说个人爱好</h3><p>喜欢的音乐人主要是周杰伦、林俊杰、陈奕迅、五月天、张杰、Zard坂井泉水（我女神）、久石让（他的音乐真的很好听）、Radwimps、米津玄师，平时没事就听歌，可以说是个终身爱好了。<br>喜欢的电影有幽灵公主（强烈推荐）、哈尔的移动城堡、天空之城。（很不巧，都是宫崎骏的）<br>游戏玩的不多，像云顶之弈这种比较多人玩，比较喜欢单机的游戏，比如极限竞速：地平线、塞尔达传说：王国之泪、GTA5。<br>应该没有人不喜欢奥特曼吧！（\狗头）</p><h3 id="怎样能够联系到我呢？"><a href="#怎样能够联系到我呢？" class="headerlink" title="怎样能够联系到我呢？"></a>怎样能够联系到我呢？</h3><p>邮箱：<a href="mailto:&#49;&#49;&#57;&#51;&#x31;&#51;&#x33;&#49;&#x30;&#x35;&#x40;&#113;&#113;&#x2e;&#x63;&#111;&#x6d;">&#49;&#49;&#57;&#51;&#x31;&#51;&#x33;&#49;&#x30;&#x35;&#x40;&#113;&#113;&#x2e;&#x63;&#111;&#x6d;</a><br>Github：<a href="https://github.com/M78Alien">M78Alien</a><br>B站：<a href="https://space.bilibili.com/360390916?spm_id_from=333.1007.0.0">Alien船长大人</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/08/24/hello-world/"/>
      <url>/2023/08/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
