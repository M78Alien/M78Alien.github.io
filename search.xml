<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BurpSuite安装教程</title>
      <link href="/2023/09/04/BurpSuite%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2023/09/04/BurpSuite%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<ul><li>Burp Suite 是用于攻击web 应用程序的集成平台，包含了许多工具。Burp Suite为这些工具设计了许多接口，以加快攻击应用程序的过程。所有工具都共享一个请求，并能处理对应的HTTP 消息、持久性、认证、代理、日志、警报。</li></ul><h1 id="下载BurpSuite"><a href="#下载BurpSuite" class="headerlink" title="下载BurpSuite"></a>下载BurpSuite</h1><ul><li>这里我在网上找到的资源，是百度网盘下载的，如果觉得下载太慢可以自行搜索其他资源</li><li>网盘链接：<a href="https://pan.baidu.com/s/11lrFGT0aGCd4BQcAJrL55w">https://pan.baidu.com/s/11lrFGT0aGCd4BQcAJrL55w</a></li><li>提取码：w5lg<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904204902.png" alt="image.png"></li><li>文件目录，不建议在中文目录下</li></ul><h1 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h1><ul><li>这个资源包提供了配套的jdk，我们可以直接使用这个jdk安装就行</li><li>如果电脑本身就有Java的也可以安装，因为原有的Java版本不一定适配</li><li>由于Java环境配置特别麻烦，所以我直接给个<a href="https://www.runoob.com/java/java-environment-setup.html">非常详细的教程</a>吧，直接跳到配置环境变量那里</li><li>配置完成在<code>cmd</code>中键入<code>java -version</code>，就可以看见以下内容，说明安装配置成功<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904205305.png" alt="image.png"></li></ul><h1 id="安装BurpSuite"><a href="#安装BurpSuite" class="headerlink" title="安装BurpSuite"></a>安装BurpSuite</h1><ul><li>首先右键资源包内的<code>burp-loader-keygen.jar</code>，使用Java打开<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904205549.png" alt="image.png"></li><li>点击<code>运行薄荷.vbs</code>，弹出来一个窗口<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904210557.png" alt="image.png"></li></ul><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904205855.png" alt="image.png"></p><ul><li>将大窗口<code>license</code>内的内容复制到小窗口内，点击Next<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904210022.png" alt="image.png"></li><li>然后点击<code>Manual activation(手动激活)</code><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904210127.png" alt="image.png"></li><li>将小窗口第二栏的内容复制到大窗口的第二栏</li><li>大窗口第三栏会出现内容，复制粘贴到小窗口的第三栏</li><li>点击Next就安装完成了</li><li>再次打开<code>运行薄荷.vbs</code>就可以看到<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904210641.png" alt="image.png"></li><li>以后允许就打开这个</li><li>但是很难找所以可以给它创建一个快捷方式</li></ul><h1 id="浏览器配置"><a href="#浏览器配置" class="headerlink" title="浏览器配置"></a>浏览器配置</h1><ul><li>这里我选择的是火狐浏览器firefox<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904212717.png" alt="image.png"></li><li>按照这个内容设置</li><li>其他浏览器的方法可以在网上找找，都差不多</li></ul><h1 id="CA证书"><a href="#CA证书" class="headerlink" title="CA证书"></a>CA证书</h1><ul><li>使用Burp Suite做安全测试时，要抓取HTTPS的包的话，是需要有Burp Suite的CA证书的，否则浏览器不支持。</li><li>使用BP导出CA证书<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904212913.png" alt="image.png"></li><li>输入以下内容就可以<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904212947.png" alt="image.png"></li><li>在burpsuite同级目录下就会出现证书文件<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904213029.png" alt="image.png"></li><li>打开火狐浏览器，设置内搜索<code>证书</code><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904213118.png" alt="image.png"></li><li>点击<code>导入...</code>，选择刚刚导出的证书即可<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230904213303.png" alt="image.png"></li><li>这样就算安装完成了</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 工具 </tag>
            
            <tag> burpsuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pikachu环境搭建</title>
      <link href="/2023/09/03/pikachu%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/09/03/pikachu%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<ul><li>Pikachu是一个带有漏洞的Web应用系统，在这里包含了常见的web安全漏洞。 如果你是一个Web渗透测试学习人员且正发愁没有合适的靶场进行练习，那么Pikachu可能正合你意。</li></ul><h1 id="第一步安装phpstudy"><a href="#第一步安装phpstudy" class="headerlink" title="第一步安装phpstudy"></a>第一步安装phpstudy</h1><ul><li>在<a href="https://www.xp.cn/download.html">phpstudy官网</a>下载安装<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230903215830.png" alt="image.png"></li><li>这里只需要使用到Mysql和apache，所以打开这两个就可以了。</li><li>如果出现MySQL无法打开的情况，可以试试改变MySQL的连接端口，可能是电脑已存在MySQL并占用了默认的3306端口</li><li>测试一下是否开启成功，在浏览器打开<code>localhost/index.php</code><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230903222109.png" alt="image.png"></li><li>出现以上页面则启动成功</li></ul><h1 id="第二步下载pikachu"><a href="#第二步下载pikachu" class="headerlink" title="第二步下载pikachu"></a>第二步下载pikachu</h1><ul><li>在GitHub当中下载<a href="https://github.com/zhuifengshaonianhanlu/pikachu">pikachu</a><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230903220438.png" alt="image.png"></li></ul><h1 id="第三步搭建pikachu"><a href="#第三步搭建pikachu" class="headerlink" title="第三步搭建pikachu"></a>第三步搭建pikachu</h1><ul><li>在phpstudy中，左栏选择网站</li><li>在网站中创建一个127.0.0.1的网站</li><li>然后将下载的<code>pikachu.zip</code>压缩包解压到<code>phpstudy_pro/WWW/127.0.0.1</code>下</li><li>然后打开<code>pikachu-master/inc/conf.inc.php</code>文件<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230903220851.png" alt="image.png"></li><li>按照指示修改内容</li></ul><h1 id="第四步pikachu！启动！"><a href="#第四步pikachu！启动！" class="headerlink" title="第四步pikachu！启动！"></a>第四步pikachu！启动！</h1><ul><li>在浏览器打开<code>127.0.0.1/pikachu-master</code><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230903221106.png" alt="image.png"></li><li>可以看见pikachu已经成功打开了，但是还需要初始化</li><li>浏览器地址加上<code>/install.php</code><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/20230903221252.png" alt="image.png"></li><li>点击<code>安装/初始化</code>就可以了</li></ul><h1 id="补充-我遇到的问题"><a href="#补充-我遇到的问题" class="headerlink" title="补充-我遇到的问题"></a>补充-我遇到的问题</h1><ol><li>一开始我将<code>pikachu-master</code>直接放在了WWW下，导致一直打不开页面，记得是放在<code>127.0.0.1</code>下</li><li>之后就是网站可以打开了，但是使用里面的内容会出现<code>数据连接失败，请仔细检查inc/config.inc.php的配置解决方法</code>，只是因为没有初始化就直接开始使用的情况，当时搞了好久才发现问题。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 工具 </tag>
            
            <tag> pikachu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小迪安全 Day08信息收集-架构，搭建，WAF等</title>
      <link href="/2023/09/02/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day08%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%9E%B6%E6%9E%84%EF%BC%8C%E6%90%AD%E5%BB%BA%EF%BC%8CWAF%E7%AD%89/"/>
      <url>/2023/09/02/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day08%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E6%9E%B6%E6%9E%84%EF%BC%8C%E6%90%AD%E5%BB%BA%EF%BC%8CWAF%E7%AD%89/</url>
      
        <content type="html"><![CDATA[<ul><li>在安全测试中，信息收集是非常重要的一个环节，此环节的信息将影响到后续的成功几率，掌握信息的多少将决定发现漏洞机会大小，换言之决定着是否能完成目标的测试任务。也可以很直接的跟大家说:渗透测试的思路就是从信息收集这里开始，你与大牛的差距也是从这里开始的!<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86.png"></li></ul><h1 id="站点搭建分析"><a href="#站点搭建分析" class="headerlink" title="站点搭建分析"></a>站点搭建分析</h1><h2 id="搭建习惯-目录型站点"><a href="#搭建习惯-目录型站点" class="headerlink" title="搭建习惯-目录型站点"></a>搭建习惯-目录型站点</h2><ul><li>简单的理解就是主站上面存在其他的cms程序</li><li>例如：</li><li>学生网站的上面通过后台扫描探针发现有一个bbs的目录一点击发现是一个bbs的论坛网站如：<code>www.xxx.com/bbs</code></li><li>我们把这个成为目录型网站、可以有两种找到漏洞的思路一个是主站的漏洞另外的一个是bbs上面的漏洞</li></ul><h2 id="搭建习惯-端口类站点"><a href="#搭建习惯-端口类站点" class="headerlink" title="搭建习惯-端口类站点"></a>搭建习惯-端口类站点</h2><ul><li>有的站点不是使用的是默认的站点80而是其他的端口，可以使用shodan这种工具去收集端口</li></ul><h2 id="搭建习惯-子域名站点"><a href="#搭建习惯-子域名站点" class="headerlink" title="搭建习惯-子域名站点"></a>搭建习惯-子域名站点</h2><ul><li>现在的主流网站都是采用的这种模式且子域名和网站之间很有可能是不在同一台的服务器上面。</li></ul><h2 id="搭建习惯-类似域名站点"><a href="#搭建习惯-类似域名站点" class="headerlink" title="搭建习惯-类似域名站点"></a>搭建习惯-类似域名站点</h2><ul><li>有些公司由于业务的发展将原来的域名弃用、选择了其他的域名但是我们访问他的旧的域名还是能够访问、有的是二级域名的更换而有的是顶级域名的更换</li><li>可以通过他的旧的域名找到一些突破口</li><li>例如：京东的网站是jd.com 那么他就有可能是采用了jd.net jd.cn等域名我们采用社工的方式去尝试获取他的相关域名信息</li></ul><h2 id="搭建习惯-旁注-c段站点"><a href="#搭建习惯-旁注-c段站点" class="headerlink" title="搭建习惯-旁注,c段站点"></a>搭建习惯-旁注,c段站点</h2><ul><li>旁注：同一个服务器上面存在多个站点、但是你要攻击的是A网站由于各种原因不能完成安全测试。就通过测试B网站进入服务器然后在攻击A网站最终实现目的。</li><li>C段：不同的服务器上面存在不同的网站，通过扫描发现与你渗透测试的是同一个网段最终拿下服务器、然后通过内网渗透的方式拿下渗透服务器。</li><li>在线工具：<a href="https://www.webscan.cc/">https://www.webscan.cc/</a></li><li>通过旁注查询可以发现同一个服务器上面有两个站点可以通过对另外的一个站点进行突破。</li></ul><h2 id="搭建习惯-搭建软件特征站点"><a href="#搭建习惯-搭建软件特征站点" class="headerlink" title="搭建习惯-搭建软件特征站点"></a>搭建习惯-搭建软件特征站点</h2><ul><li>有的网站是借助于第三方的集成搭建工具实现例如：PHPstudy、宝塔等环境</li><li>这样的集成环境搭建的危害就是泄露了详细的版本信息。</li><li>phpstudy搭建了之后在默认的站点安装了phpmyadmin有的网站没有做安全性直接可以通过用户名：root密码：root 登录进入</li></ul><h1 id="WAF防护分析"><a href="#WAF防护分析" class="headerlink" title="WAF防护分析"></a>WAF防护分析</h1><h2 id="什么是WAF应用"><a href="#什么是WAF应用" class="headerlink" title="什么是WAF应用"></a>什么是WAF应用</h2><ul><li>Web应用防护系统（也称为：网站应用级入侵防御系统。英文：Web Application Firewall，简称： WAF）。利用国际上公认的一种说法：Web应用防火墙是通过执行一系列针对HTTP&#x2F;HTTPS的安全策略来专门为Web应用提供保护的一款产品。</li></ul><h2 id="如何快速识别WAF"><a href="#如何快速识别WAF" class="headerlink" title="如何快速识别WAF"></a>如何快速识别WAF</h2><h3 id="采用工具wafwoof"><a href="#采用工具wafwoof" class="headerlink" title="采用工具wafwoof"></a>采用工具wafwoof</h3><ul><li>获取地址：<a href="https://codeload.github.com/EnableSecurity/wafw00f/zip/refs/heads/master">https://codeload.github.com/EnableSecurity/wafw00f/zip/refs/heads/master</a></li><li>安装之前一定要有python的环境不然安装不上<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20221934.png"></li><li>wafw00f的缺点判断的不是特别的准确存在误报或识别不出的情况。</li></ul><h3 id="检查元素"><a href="#检查元素" class="headerlink" title="检查元素"></a>检查元素</h3><ul><li>在有些网站的请求信息当中有的网站没有做安全信息上面留下了waf的相关信息<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/waf%E6%B5%8B%E8%AF%95.png"></li></ul><h3 id="使用nmap指纹检测"><a href="#使用nmap指纹检测" class="headerlink" title="使用nmap指纹检测"></a>使用nmap指纹检测</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap --script==http-waf-fingerprint</span><br><span class="line">nmap --script=http-waf-detec</span><br></pre></td></tr></table></figure><h2 id="识别wAF对于安全测试的意义"><a href="#识别wAF对于安全测试的意义" class="headerlink" title="识别wAF对于安全测试的意义"></a>识别wAF对于安全测试的意义</h2><ul><li>对于一个网站要是使用了waf而渗透人员没有识别直接使用工具进行扫描有可能会导致waf将你的ip地址拉入黑名单而不能访问。而识别waf在于有针对性行的绕过各个厂商的waf可能存在着不同的绕过思路。</li></ul><hr><p>笔记参考自<a href="https://www.yuque.com/weiker/xiaodi">小迪安全</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 小迪安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小迪安全 Day07信息收集-CDN绕过方法</title>
      <link href="/2023/09/02/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day07%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-CDN%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/"/>
      <url>/2023/09/02/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day07%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-CDN%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<ul><li>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。但在安全测试过程中，若目标存在CDN服务，将会影响到后续的安全测试过程。 <img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/CDN.png"></li></ul><h1 id="如何判断目标存在CDN服务"><a href="#如何判断目标存在CDN服务" class="headerlink" title="如何判断目标存在CDN服务"></a>如何判断目标存在CDN服务</h1><ul><li>利用多节点技术进行请求返回判断</li><li><a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20104946.png"></li><li>如果ping的结果只有一个那么就没有CDN、要是不止一个则可以判断为有CDN</li><li>没有使用CDN，例如<a href="http://www.xiaodi8.com/">www.xiaodi8.com</a><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20105039.png"></li><li>使用了CDN，例如<a href="http://www.baidu.com/">www.baidu.com</a><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20105112.png"></li></ul><h1 id="CDN对于安全测试有那些影响"><a href="#CDN对于安全测试有那些影响" class="headerlink" title="CDN对于安全测试有那些影响"></a>CDN对于安全测试有那些影响</h1><ul><li>cdn会隐藏服务器真实的ip地址，无法对目标网站的操作系统进行渗透，但cdn站点又可以理解为是目标站点的镜像站点（大多数都是静态cdn加速），拥有相同的网站架构，且cdn服务器可与站点服务器进行交互，因此sql注入，xss等漏洞的挖掘并不受太大影响。</li></ul><h1 id="目前常见的CDN绕过技术有哪些"><a href="#目前常见的CDN绕过技术有哪些" class="headerlink" title="目前常见的CDN绕过技术有哪些"></a>目前常见的CDN绕过技术有哪些</h1><h2 id="子域名查询"><a href="#子域名查询" class="headerlink" title="子域名查询"></a>子域名查询</h2><ul><li>因为有些网站为了节约成本，只为主站做了CDN服务，而子站没有，所以可以通过子站查询到IP地址</li></ul><h2 id="邮箱服务查询"><a href="#邮箱服务查询" class="headerlink" title="邮箱服务查询"></a>邮箱服务查询</h2><ul><li>很多公司都有内部邮箱，大部分都是内部人员访问，而且访问量不大，所以基本上都没有做CDN服务</li></ul><h2 id="国外地址请求"><a href="#国外地址请求" class="headerlink" title="国外地址请求"></a>国外地址请求</h2><ul><li>因为很多的企业没有在国外部署CDN，要是用国外的地址请求、就容易找到他的真实地址。</li></ul><h2 id="遗留文件"><a href="#遗留文件" class="headerlink" title="遗留文件"></a>遗留文件</h2><ul><li>如PHPinfo信息当中会遗留出ip地址</li></ul><h2 id="扫描全网"><a href="#扫描全网" class="headerlink" title="扫描全网"></a>扫描全网</h2><ul><li>从各个地区进行扫描IP，一般距离服务器近的不会使用CDN，即是真实IP</li></ul><h2 id="黑暗引擎搜索"><a href="#黑暗引擎搜索" class="headerlink" title="黑暗引擎搜索"></a>黑暗引擎搜索</h2><ul><li>fofa、傻蛋（shodan）、谛听、zoomeye、censys</li></ul><h2 id="特定文件dns历史记录"><a href="#特定文件dns历史记录" class="headerlink" title="特定文件dns历史记录"></a>特定文件dns历史记录</h2><ul><li>查看它没有使用CDN之前的IP地址记录，可能就是它的IP地址</li></ul><h2 id="以量打量"><a href="#以量打量" class="headerlink" title="以量打量"></a>以量打量</h2><ul><li>CDN节点的流量是有上限的，利用DDoS流量耗尽攻击，将流量耗尽就能直通原IP了</li><li>属于违法行为</li></ul><hr><p>笔记参考自<a href="https://www.yuque.com/weiker/xiaodi">小迪安全</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 小迪安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小迪安全 Day06基础入门-加密算法</title>
      <link href="/2023/09/02/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day06%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/"/>
      <url>/2023/09/02/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day06%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<ul><li>在渗透测试中，常见的密码等敏感信息会采用加密处理，其中作为安全测试人员必须要了解常见的加密方式，才能为后续的安全测试做好准备，本次课程将讲解各种加密编码等知识，便于后期的学习和发展。</li></ul><h1 id="加密解密"><a href="#加密解密" class="headerlink" title="加密解密"></a>加密解密</h1><h2 id="加密软件"><a href="#加密软件" class="headerlink" title="加密软件"></a>加密软件</h2><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20100158.png"></p><ul><li>解密网站<br><a href="https://www.cmd5.com/">https://www.cmd5.com/</a><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20100323.png"></li></ul><h2 id="常见加密编码等算法解析"><a href="#常见加密编码等算法解析" class="headerlink" title="常见加密编码等算法解析"></a>常见加密编码等算法解析</h2><ul><li>MD5，SHA，ASC，进制，时间戳，URL，BASE64，Unescape，AES，DES等</li><li>MD5等不可逆，这个网站不是通过常规枚举，而是通过已知</li></ul><h2 id="常见加密形式算法解析"><a href="#常见加密形式算法解析" class="headerlink" title="常见加密形式算法解析"></a>常见加密形式算法解析</h2><ul><li>直接加密，带salt，带密码，带偏移，带位数，带模式，带干扰，自定义组合等</li></ul><h2 id="常见解密方式（针对"><a href="#常见解密方式（针对" class="headerlink" title="常见解密方式（针对)"></a>常见解密方式（针对)</h2><ul><li>枚举，自定义逆向算法，可逆向</li></ul><h2 id="了解常规加密算法的特性"><a href="#了解常规加密算法的特性" class="headerlink" title="了解常规加密算法的特性"></a>了解常规加密算法的特性</h2><ul><li>长度位数，字符规律，代码分析，搜索获取等</li></ul><h1 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h1><ul><li>时间戳网站&lt;<a href="https://tool.lu/timestamp/">https://tool.lu/timestamp/</a>&gt;<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20101017.png"></li><li>时间戳通常是用在用户的注册、登录、注销等情况</li></ul><h1 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h1><ul><li>url编码规则&lt;<a href="https://www.cnblogs.com/cxygg/p/9278542.html">https://www.cnblogs.com/cxygg/p/9278542.html</a>&gt;<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20101811.png"></li></ul><h1 id="base64编码"><a href="#base64编码" class="headerlink" title="base64编码"></a>base64编码</h1><ul><li>base64编码的特点：随着编码的文本增加而增加、由大小写和数字组成且字符结尾一般有两个等号</li><li>一般在代码中为了安全会使用base64进行编码<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20102002.png"></li></ul><h1 id="unescape编码"><a href="#unescape编码" class="headerlink" title="unescape编码"></a>unescape编码</h1><ul><li>和URL编码有点像</li><li>特点：一般是%U+四个数字对应着两个字符、主要运用于网站web应用<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20102141.png"></li></ul><h1 id="AES加密"><a href="#AES加密" class="headerlink" title="AES加密"></a>AES加密</h1><ul><li>AES在逐渐的取代md5值、在解密的过程中一定要知道密码和偏移量不然是借不出来的。</li><li>在线工具：<a href="http://tool.chacuo.net/cryptaes">http://tool.chacuo.net/cryptaes</a><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-02%20102645.png"></li><li>密码是干扰项，会加入到文本当中，偏移量是加密的起始点</li><li>看起来是base64，但是对base64解密得到的是乱码</li></ul><hr><p>笔记参考自<a href="https://www.yuque.com/weiker/xiaodi">小迪安全</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 小迪安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小迪安全 Day05基础入门-系统及数据库等</title>
      <link href="/2023/09/01/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day05%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%B3%BB%E7%BB%9F%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/"/>
      <url>/2023/09/01/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day05%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E7%B3%BB%E7%BB%9F%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AD%89/</url>
      
        <content type="html"><![CDATA[<p>除去前期讲到过的搭建平台中间件，网站源码外，容易受到攻击的还有操作系统，数据库，第三方平台等，期中这类攻击也能直接影响到WEB或服务器的安全，导致网站或服务器权限的获取。<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E7%B3%BB%E7%BB%9F%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%BA%93.png"></p><h1 id="操作系统层面："><a href="#操作系统层面：" class="headerlink" title="操作系统层面："></a>操作系统层面：</h1><h2 id="识别操作系统的常见方法"><a href="#识别操作系统的常见方法" class="headerlink" title="识别操作系统的常见方法"></a>识别操作系统的常见方法</h2><h3 id="有网站"><a href="#有网站" class="headerlink" title="有网站"></a>有网站</h3><ul><li>可以通过网站的手工识别方法判断：</li><li>windows对大小写不敏感，也就是说你在网页中可以替换网站路径的大小写进行测试，如果改变大小写不会影响则可能是Windows的服务器，有影响则可能是Linux。</li></ul><h3 id="没网站"><a href="#没网站" class="headerlink" title="没网站"></a>没网站</h3><ul><li>通过nmap进行扫描：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O IP地址</span><br></pre></td></tr></table></figure><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-01%20141011.png"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Running (JUST GUESSING): Microsoft Windows 7|2008|Vista|8.1|2012 (96%)</span><br><span class="line">OS CPE: cpe:/o:microsoft:windows_7::sp1 cpe:/o:microsoft:windows_server_2008:r2 cpe:/o:microsoft:windows_vista::- cpe:/o:microsoft:windows_vista::sp1 cpe:/o:microsoft:windows_8 cpe:/o:microsoft:windows_8.1:r1 cpe:/o:microsoft:windows_server_2012:r2</span><br><span class="line">Aggressive OS guesses: Microsoft Windows 7 SP1 (96%), Microsoft Windows Server 2008 R2 (90%), Microsoft Windows 7 or Windows Server 2008 R2 (90%), Microsoft Windows Server 2008 or 2008 Beta 3 (90%), Microsoft Windows 7 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 R2 (90%), Microsoft Windows 7 SP1 or Windows Server 2008 SP2 or 2008 R2 SP1 (90%), Microsoft Windows Vista SP0 or SP1, Windows Server 2008 SP1, or Windows 7 (90%), Microsoft Windows Server 2008 (90%), Microsoft Windows Vista SP2, Windows 7 SP1, or Windows Server 2008 (90%)</span><br></pre></td></tr></table></figure></li><li>对服务器系统进行了识别，这个判断应该为<code>Microsoft Windows 7 SP1</code></li><li>备注：不是所有的系统都可以用这种方式扫描出操作系统的类型、在windows的一些高版本中无法探测，例如：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">─<span class="comment"># nmap -O 10.1.1.129</span></span><br><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-06-07 21:10 CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> 10.1.1.129 (10.1.1.129)</span><br><span class="line">Host is up (0.00053s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line">80/tcp   open  http</span><br><span class="line">MAC Address: 00:0C:29:DC:AF:EA (VMware)</span><br><span class="line">No exact OS matches <span class="keyword">for</span> host (If you know what OS is running on it, see https://nmap.org/submit/ ).</span><br><span class="line">TCP/IP fingerprint:</span><br><span class="line">OS:SCAN(V=7.91%E=4%D=6/7%OT=80%CT=1%CU=36041%PV=Y%DS=1%DC=D%G=Y%M=000C29%TM</span><br><span class="line">OS:=60BE1ADE%P=x86_64-pc-linux-gnu)SEQ(SP=106%GCD=1%ISR=10C%TI=I%CI=I%II=I%</span><br><span class="line">OS:SS=S%TS=U)OPS(O1=M5B4NW8NNS%O2=M5B4NW8NNS%O3=M5B4NW8%O4=M5B4NW8NNS%O5=M5</span><br><span class="line">OS:B4NW8NNS%O6=M5B4NNS)WIN(W1=FFFF%W2=FFFF%W3=FFFF%W4=FFFF%W5=FFFF%W6=FF70)</span><br><span class="line">OS:ECN(R=Y%DF=Y%T=80%W=FFFF%O=M5B4NW8NNS%CC=Y%Q=)T1(R=Y%DF=Y%T=80%S=O%A=S+%</span><br><span class="line">OS:F=AS%RD=0%Q=)T2(R=Y%DF=Y%T=80%W=0%S=Z%A=S%F=AR%O=%RD=0%Q=)T3(R=Y%DF=Y%T=</span><br><span class="line">OS:80%W=0%S=Z%A=O%F=AR%O=%RD=0%Q=)T4(R=Y%DF=Y%T=80%W=0%S=A%A=O%F=R%O=%RD=0%</span><br><span class="line">OS:Q=)T5(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)T6(R=Y%DF=Y%T=80%W=0%S=</span><br><span class="line">OS:A%A=O%F=R%O=%RD=0%Q=)T7(R=Y%DF=Y%T=80%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)U1(R=</span><br><span class="line">OS:Y%DF=N%T=80%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)IE(R=Y%DFI=N%</span><br><span class="line">OS:T=80%CD=Z)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="TTL"><a href="#TTL" class="headerlink" title="TTL"></a>TTL</h3><p>不同的操作系统的默认TTL值是不同的， 所以我们可以通过TTL值来判断主机的操作系统，但是当用户修改了TTL值的时候，就会误导我们的判断，所以这种判断方式也<strong>不一定准确</strong>。下面是默认操作系统的TTL：</p><ol><li>WINDOWS NT&#x2F;2000   TTL：128</li><li>WINDOWS 95&#x2F;98     TTL：32</li><li>UNIX              TTL：255</li><li>LINUX             TTL：64</li><li>WIN7           TTL：64<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-01%20143750.png"></li></ol><ul><li>这个TTL&#x3D;110，接近与128，属于Windows NT&#x2F;2000</li></ul><h2 id="简要两者的区别及识别意义"><a href="#简要两者的区别及识别意义" class="headerlink" title="简要两者的区别及识别意义"></a>简要两者的区别及识别意义</h2><ul><li>系统文件的路径不同，Windows是分C盘、D盘等，而Linux的盘储存就不一样，等等。</li><li>已知服务器的操作系统是什么，就可以对症下药有针对性地围绕这个操作系统所支持地方面去发展。</li></ul><h2 id="操作系统层面漏洞类型对应意义"><a href="#操作系统层面漏洞类型对应意义" class="headerlink" title="操作系统层面漏洞类型对应意义"></a>操作系统层面漏洞类型对应意义</h2><ul><li>有些漏洞对于我们来说是没有意义的，只是会造成一些危害，但不会造成权限的丢失，只是影响了产品，没有获取到权限那就没太大意义。</li><li>不同的漏洞会造成不同漏洞利用的条件</li></ul><h2 id="简要操作系统层面漏洞影响范围"><a href="#简要操作系统层面漏洞影响范围" class="headerlink" title="简要操作系统层面漏洞影响范围"></a>简要操作系统层面漏洞影响范围</h2><ul><li>有些漏洞会对操作系统干扰造成崩溃、而有些系统只是蓝屏、或者是权限的提升</li></ul><h1 id="数据库层面："><a href="#数据库层面：" class="headerlink" title="数据库层面："></a>数据库层面：</h1><ul><li>网站分动态网站和静态网站，静态网站由于只是单页，没有数据传递，所以不存在数据库漏洞。</li></ul><h2 id="识别数据库类型常见方法"><a href="#识别数据库类型常见方法" class="headerlink" title="识别数据库类型常见方法"></a>识别数据库类型常见方法</h2><ul><li>默认的语言搭配的数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 组合类型asp + access/mssql</span><br><span class="line">2. 组合类型php + mysql </span><br><span class="line">3. 组合类型aspx+mssql</span><br><span class="line">4. 组合类型jsp +mysql/oracle</span><br><span class="line">5. 组合类型Python + MongoDB</span><br></pre></td></tr></table></figure></li><li>常见的数据库默认端口号</li><li>关系型数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. mysql3306</span><br><span class="line">2. sqlserver1433</span><br><span class="line">3. oracle1521</span><br><span class="line">4. psotgresql5432</span><br></pre></td></tr></table></figure></li><li>非关系型数据库<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. MongoDB27017</span><br><span class="line">2. Redis6379</span><br><span class="line">3. memcached11211</span><br></pre></td></tr></table></figure><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-01%20145520.png"></li><li>3306端口为MySQL数据库</li><li>其中STATE状态，open表示打开，close是关闭，filtered是拦截，表示nmap无法确定开放状态</li></ul><h2 id="数据库类型区别及识别意义"><a href="#数据库类型区别及识别意义" class="headerlink" title="数据库类型区别及识别意义"></a>数据库类型区别及识别意义</h2><ul><li>数据库的不同表示的结构也是不同、写法结构也不一样、所以产生的漏洞也不一样。</li><li>不同的数据库的攻击方式也不完全一样。</li></ul><h2 id="数据库常见漏洞类型及攻击"><a href="#数据库常见漏洞类型及攻击" class="headerlink" title="数据库常见漏洞类型及攻击"></a>数据库常见漏洞类型及攻击</h2><ul><li>存在弱口令</li><li>数据库漏洞</li></ul><h2 id="简要数据库层面漏洞影响范围"><a href="#简要数据库层面漏洞影响范围" class="headerlink" title="简要数据库层面漏洞影响范围"></a>简要数据库层面漏洞影响范围</h2><ul><li>数据库权限</li><li>网站权限</li><li>修改网页内容</li></ul><h1 id="第三方层面"><a href="#第三方层面" class="headerlink" title="第三方层面"></a>第三方层面</h1><h2 id="如何判断有哪些第三方平台或软件"><a href="#如何判断有哪些第三方平台或软件" class="headerlink" title="如何判断有哪些第三方平台或软件"></a>如何判断有哪些第三方平台或软件</h2><ul><li>通过扫描网站可以看到安装了哪些第三方的软件，例如下面这个就是安装了Apache httpd<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O -sV IP地址</span><br></pre></td></tr></table></figure><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-01%20151155.png"></li></ul><h2 id="简要为什么要识别第三方平台或软件"><a href="#简要为什么要识别第三方平台或软件" class="headerlink" title="简要为什么要识别第三方平台或软件"></a>简要为什么要识别第三方平台或软件</h2><ul><li>不同的第三方软件或工具存在不同的漏洞、识别到更多的信息对收集到的漏洞也就越多</li></ul><h2 id="常见第三方平台或软件漏洞类型及攻击"><a href="#常见第三方平台或软件漏洞类型及攻击" class="headerlink" title="常见第三方平台或软件漏洞类型及攻击"></a>常见第三方平台或软件漏洞类型及攻击</h2><ul><li>弱口令</li><li>软件的漏洞攻击</li></ul><h2 id="简要第三方平台或软件安全测试的范围"><a href="#简要第三方平台或软件安全测试的范围" class="headerlink" title="简要第三方平台或软件安全测试的范围"></a>简要第三方平台或软件安全测试的范围</h2><ul><li>直接获取到软件的权限便于进一步的提权和攻击</li></ul><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><ul><li>除去常规wEB安全及APP安全测试外，类似服务器单一或复杂的其他服务（邮件，游戏，负载均衡等），也可以作为安全测试目标，此类目标测试原则只是少了WEB应用或其他安全问题。<strong>所以明确安全测试思路是很重要的！</strong></li><li>要根据它上面提供的服务来选取这个常见的攻击漏洞或者攻击方式</li></ul><h1 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h1><h2 id="演示某数据库弱口令及漏洞演示"><a href="#演示某数据库弱口令及漏洞演示" class="headerlink" title="演示某数据库弱口令及漏洞演示"></a>演示某数据库弱口令及漏洞演示</h2><h3 id="Mysql-身份认证绕过漏洞（CVE-2012-2122）"><a href="#Mysql-身份认证绕过漏洞（CVE-2012-2122）" class="headerlink" title="Mysql 身份认证绕过漏洞（CVE-2012-2122）"></a>Mysql 身份认证绕过漏洞（CVE-2012-2122）</h3><ul><li><a href="https://vulhub.org/#/environments/mysql/CVE-2012-2122/">https://vulhub.org/#/environments/mysql/CVE-2012-2122/</a></li><li>首先在Ubuntu搭建漏洞环境<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-01%20164727.png"></li><li>在kali当中对这个数据库进行扫描<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-01%20164829.png"></li><li>可以看出MySQL版本为5.5.23，存在这个漏洞<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">seq</span> 1 1000`; <span class="keyword">do</span> mysql -u root --password=bad -h 192.168.3.39 2&gt;/dev/null; <span class="keyword">done</span></span><br></pre></td></tr></table></figure></li><li>就可以直接进入到MySQL的shell<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-01%20165219.png"></li></ul><h2 id="第三方应用安全漏洞演示"><a href="#第三方应用安全漏洞演示" class="headerlink" title="第三方应用安全漏洞演示"></a>第三方应用安全漏洞演示</h2><h3 id="phpmyadmin-4-8-1-远程文件包含漏洞（CVE-2018-12613）"><a href="#phpmyadmin-4-8-1-远程文件包含漏洞（CVE-2018-12613）" class="headerlink" title="phpmyadmin 4.8.1 远程文件包含漏洞（CVE-2018-12613）"></a>phpmyadmin 4.8.1 远程文件包含漏洞（CVE-2018-12613）</h3><ul><li><a href="https://vulhub.org/#/environments/phpmyadmin/CVE-2018-12613/">https://vulhub.org/#/environments/phpmyadmin/CVE-2018-12613/</a></li><li>搭建环境</li><li>然后访问<code>http://your-ip:8080/index.php?target=db_sql.php%253f/../../../../../../../../etc/passwd</code><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-09-01%20171122.png"></li><li>可见<code>/etc/passwd</code>被读取，说明文件包含漏洞存在</li></ul><hr><p>笔记参考自<a href="https://www.yuque.com/weiker/xiaodi">小迪安全</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 小迪安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小迪安全 Day04基础入门-WEB源码拓展</title>
      <link href="/2023/08/31/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day04%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-WEB%E6%BA%90%E7%A0%81%E6%8B%93%E5%B1%95/"/>
      <url>/2023/08/31/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day04%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-WEB%E6%BA%90%E7%A0%81%E6%8B%93%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h1 id="WEB源码拓展"><a href="#WEB源码拓展" class="headerlink" title="WEB源码拓展"></a>WEB源码拓展</h1><ul><li>WEB源码在安全测试中是非常重要的信息来源，可以用来代码审计漏洞也可以用来做信息突破口，其中WEB源码有很多技术需要简明分析。比如:获取某ASP源码后可以采用默认数据库下载为突破，获取某其他脚本源码漏洞可以进行代码审计挖掘或分析其业务逻辑等，总之源码的获取将为后期的安全测试提供了更多的思路。<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-31%20142321.png"></li><li>数据库配置文件，后台目录，模版目录，数据库目录等</li><li>ASP,PHP,ASPX,JSP,JAVAWEB等脚本类型源码安全问题，不同的脚本写出来的数据库储存是不一样的，不同脚本所设置的安全漏洞也是不一样的。</li><li>源码功能决定漏洞的类型，社交，论坛，门户，第三方，博客等不同的代码机制对应漏洞，例如电商主要是支付交易内容，论坛主要是用户信息，可以针对这些内容做文章。</li><li>框架就是将一些常用的功能集成到一个框架内，在开发时直接引用。如果时通过框架开发的，我们可以直接寻找框架的漏洞，如果时非框架的话，就需要在代码当中寻找漏洞。</li><li>CMS称为开源程序，CMS的意义就是如果你在网上找不到这个漏洞，你就自己分析，但是网络上如果找得到，就可以直接使用别人分析的漏洞进行测试。</li><li>能够CMS识别的成为开源，网络上找不到源码的通常成为内部的。开源的网站可以在网络上查找他人分析的漏洞，也可以自己分析；内部的则需要自己分析，通过扫描工具等进行分析。</li><li>关于源码获取的相关途径:搜索，咸鱼淘宝，第三方源码站，各种行业对应</li><li>总结:关注应用分类及脚本类型估摸出可能存在的漏洞（其中框架类例外，只需要找这个框架的漏洞就可以了），在获取源码后可进行本地安全测试或代码审计，也可以分析其目录工作原理（数据库备份，bak文件等），未获取到的源码采用各种方法想办法获取!</li><li><a href="https://websec.readthedocs.io/zh/latest/">WEB安全学习笔记</a></li></ul><hr><p>笔记参考自<a href="https://www.yuque.com/weiker/xiaodi">小迪安全</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 小迪安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小迪安全 Day03基础入门-搭建安全拓展</title>
      <link href="/2023/08/30/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day03%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%90%AD%E5%BB%BA%E5%AE%89%E5%85%A8%E6%8B%93%E5%B1%95/"/>
      <url>/2023/08/30/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day03%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%90%AD%E5%BB%BA%E5%AE%89%E5%85%A8%E6%8B%93%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建安全拓展"><a href="#搭建安全拓展" class="headerlink" title="搭建安全拓展"></a>搭建安全拓展</h1><h2 id="常见搭建平台脚本"><a href="#常见搭建平台脚本" class="headerlink" title="常见搭建平台脚本"></a>常见搭建平台脚本</h2><ul><li><code>ASP</code>、<code>PHP</code>、<code>ASPX</code>、<code>JSP</code>、<code>PY</code>、<code>JAVAWEB</code>等环境<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20194303.png" alt="Windows Server2003 IIS"></li></ul><h2 id="域名IP目录解析安全问题"><a href="#域名IP目录解析安全问题" class="headerlink" title="域名IP目录解析安全问题"></a>域名IP目录解析安全问题</h2><p>通过域名访问，直接进入到网站绝对目录内，通过IP访问，则可能进入到上一级目录，存在安全问题。</p><h2 id="常见文件后缀解析对应安全"><a href="#常见文件后缀解析对应安全" class="headerlink" title="常见文件后缀解析对应安全"></a>常见文件后缀解析对应安全</h2><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20210609.png" alt="后缀解析"><br>不同扩展名对应指定可执行文件路径，可以不同扩展名指定相同可执行文件。但是如果没有指定，那解析时就会出问题。</p><h2 id="常见安全测试中的安全防护"><a href="#常见安全测试中的安全防护" class="headerlink" title="常见安全测试中的安全防护"></a>常见安全测试中的安全防护</h2><h3 id="身份验证方法"><a href="#身份验证方法" class="headerlink" title="身份验证方法"></a>身份验证方法</h3><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20211614.png"><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20211709.png"><br>通过身份验证限制，需要用户名和密码才能进入站点，不允许匿名访问。</p><h3 id="IP地址和域名限制"><a href="#IP地址和域名限制" class="headerlink" title="IP地址和域名限制"></a>IP地址和域名限制</h3><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20212144.png"><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20213112.png"><br>设置限制IP地址或者域名，以设定访问权限。</p><h2 id="Web后门与用户及文件权限"><a href="#Web后门与用户及文件权限" class="headerlink" title="Web后门与用户及文件权限"></a>Web后门与用户及文件权限</h2><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20214430.png"><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20215034.png"></p><p>匿名登录的用户会出现在列表当中。<br>通过设置权限，可以限制后门访问文件。</p><h2 id="演示实例"><a href="#演示实例" class="headerlink" title="演示实例"></a>演示实例</h2><ul><li>基于中间件的简要识别<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%202158031.png"><br>在审查元素当中，可以看到response headers，在Server中可以判断出是IIS6.0。</li></ul><ul><li>基于中间件的安全漏洞<br>通过查阅资料等，就可以知道这个平台有哪些漏洞。</li><li>基于中间件的靶场使用<br><a href="https://vulhub.org/">https://vulhub.org/</a></li></ul><h3 id="演示Apache-HTTPD-多后缀解析漏洞"><a href="#演示Apache-HTTPD-多后缀解析漏洞" class="headerlink" title="演示Apache HTTPD 多后缀解析漏洞"></a>演示Apache HTTPD 多后缀解析漏洞</h3><ul><li>第一步，首先在Ubuntu系统当中<a href="https://m78alien.github.io/2023/08/29/%E5%9C%A8Ubuntu%E6%90%AD%E5%BB%BAvulhub%E6%BC%8F%E6%B4%9E%E9%9D%B6%E5%9C%BA/">安装好docker环境</a>，并下载文件</li><li>第二步，在vulhub网站找到想做的环境，<a href="https://vulhub.org/#/environments/httpd/apache_parsing_vulnerability/">https://vulhub.org/#/environments/httpd/apache_parsing_vulnerability/</a><br>建议先去网站看看漏洞内容的描述，Apache HTTPD 支持一个文件拥有多个后缀，并为不同后缀执行不同的指令。在有多个后缀的情况下，只要一个文件含有<code>.php</code>后缀的文件即将被识别成PHP文件，没必要是最后一个后缀。利用这个特性，将会造成一个可以绕过上传白名单的解析漏洞。<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-30%20212552.png"></li><li>第三步，在Ubuntu终端当中，打开到<code>vulhub-master</code>文件夹，进入到指定的文件路径中<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-30%20212953.png"></li><li>第四步，搭建环境<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose build</span><br><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-30%20213201.png"></li><li>第五步，在物理机浏览器中，输入虚拟机的IP地址以打开网站<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-30%20213749.png"></li><li>第六步，创建一个文件<code>1.php.jpg</code>，通过notepad++打开，并键入以下内容，电脑将这个文件识别为jpg图片<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li>第七步，在网站当中选择该文件，并提交<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-30%20214038.png"></li><li>第八步，在网址栏IP后输入&#x2F;uploadfiles&#x2F;1.php.jpg，发现打开的是PHP文件，而非jpg文件，因此可以通过这个方法，造成一个可以绕过上传白名单的解析漏洞。<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-30%20214218.png"></li><li>第九步，最后键入以下指令，关闭环境<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose down</span><br></pre></td></tr></table></figure><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-30%20214924.png"></li></ul><hr><p>笔记内容参考自<a href="https://www.yuque.com/weiker/xiaodi">小迪安全</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 小迪安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Ubuntu搭建vulhub漏洞靶场</title>
      <link href="/2023/08/29/%E5%9C%A8Ubuntu%E6%90%AD%E5%BB%BAvulhub%E6%BC%8F%E6%B4%9E%E9%9D%B6%E5%9C%BA/"/>
      <url>/2023/08/29/%E5%9C%A8Ubuntu%E6%90%AD%E5%BB%BAvulhub%E6%BC%8F%E6%B4%9E%E9%9D%B6%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<p><a href="https://vulhub.org/">vulhub官网</a><br>Vulhub是一个面向大众的开源漏洞靶场，无需docker知识，简单执行两条命令即可编译、运行一个完整的漏洞靶场镜像。旨在让漏洞复现变得更加简单，让安全研究者更加专注于漏洞原理本身。</p><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><p>首先进入root权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">apt install docker</span><br></pre></td></tr></table></figure><p>查看是否安装成功<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20225631.png"></p><h2 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python3-pip</span><br></pre></td></tr></table></figure><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20225946.png"><br>查看pip是否安装成功<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20230034.png"></p><h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h2><p>使用pip安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install docker-compose</span><br></pre></td></tr></table></figure><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20230320.png"></p><h2 id="安装vulhub"><a href="#安装vulhub" class="headerlink" title="安装vulhub"></a>安装vulhub</h2><p>百度网盘下载：<a href="https://pan.baidu.com/s/1bsrphbfsUGHNP3RkpNaidw?pwd=6666">https://pan.baidu.com/s/1bsrphbfsUGHNP3RkpNaidw?pwd=6666</a><br>复制到Ubuntu当中，然后解压</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip vulhub-master.zip</span><br></pre></td></tr></table></figure><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20230531.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 漏洞靶场 </tag>
            
            <tag> vulhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小迪安全 Day02基础入门-数据包拓展</title>
      <link href="/2023/08/29/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day02%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%95%B0%E6%8D%AE%E5%8C%85%E6%8B%93%E5%B1%95/"/>
      <url>/2023/08/29/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day02%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%95%B0%E6%8D%AE%E5%8C%85%E6%8B%93%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h1 id="数据包拓展"><a href="#数据包拓展" class="headerlink" title="数据包拓展"></a>数据包拓展</h1><h2 id="http-https数据包"><a href="#http-https数据包" class="headerlink" title="http&#x2F;https数据包"></a>http&#x2F;https数据包</h2><h3 id="http协议是什么"><a href="#http协议是什么" class="headerlink" title="http协议是什么"></a>http协议是什么</h3><ol><li>HTTP协议是超文本传输协议的缩写，英文是Hyper Text Transfer Protocol。它是从WEB服务器传输超文本标记语言(HTML)到本地浏览器的传送协议。</li><li>设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。</li><li>HTTP有多个版本，目前广泛使用的是HTTP&#x2F;1.1版本。</li></ol><h3 id="HTTP原理"><a href="#HTTP原理" class="headerlink" title="HTTP原理"></a>HTTP原理</h3><ol><li>HTTP是一个基于TCP&#x2F;IP通信协议来传递数据的协议，传输的数据类型为HTML文件、图片文件、查询结果等。</li><li>HTTP协议一般用于B&#x2F;S架构（）。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。</li></ol><h3 id="HTTP特点"><a href="#HTTP特点" class="headerlink" title="HTTP特点"></a>HTTP特点</h3><ol><li>http协议支持客户端&#x2F;服务端模式，也是一种请求&#x2F;响应模式的协议。</li><li>简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有<code>GET</code>、<code>HEAD</code>、<code>POST</code>。</li><li>灵活：HTTP允许传输任意类型的数据对象。传输的类型由Content-Type加以标记。</li><li>无连接：限制每次连接只处理一个请求。服务器处理完请求，并收到客户的应答后，即断开连接，但是却不利于客户端与服务器保持会话连接，为了弥补这种不足，产生了两项记录http状态的技术，一个叫做Cookie,一个叫做Session。</li><li>无状态：无状态是指协议对于事务处理没有记忆，后续处理需要前面的信息，则必须重传。</li></ol><h3 id="URI和URL的区别"><a href="#URI和URL的区别" class="headerlink" title="URI和URL的区别"></a>URI和URL的区别</h3><ol><li>HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。</li><li>URI：Uniform Resource Identifier 统一资源标识符</li><li>URL：Uniform Resource Location 统一资源定位符</li><li>URI 是用来标示一个具体的资源的，我们可以通过 URI 知道一个资源是什么。</li><li>URL 则是用来定位具体的资源的，标示了一个具体的资源位置。互联网上的每个文件都有一个唯一的URL。</li></ol><h3 id="HTTP报文组成"><a href="#HTTP报文组成" class="headerlink" title="HTTP报文组成"></a>HTTP报文组成</h3><ol><li>请求行：包括请求方法、URL、协议&#x2F;版本</li><li>请求头(Request Header)</li><li>请求正文</li></ol><h3 id="http通信过程"><a href="#http通信过程" class="headerlink" title="http通信过程"></a>http通信过程</h3><p>建立连接—&gt;发送请求数据包—&gt;返回响应数据包——&gt;关闭连接1.浏览器建立与web服务器之间的连接</p><ol><li>浏览器建立与web服务器之间的连接</li><li>浏览器将请求数据打包（生成请求数据包）并发送到web服务器</li><li>web服务器将处理结果打包（生成响应数据包）并发送给浏览器</li><li>web服务器关闭连接</li></ol><h3 id="https传输数据流程"><a href="#https传输数据流程" class="headerlink" title="https传输数据流程"></a>https传输数据流程</h3><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20163111.png" alt="https传输数据流程"></p><ol><li>首先客户端通过URL访问服务器建立SSL连接。</li><li>服务端收到客户端请求后，会将网站支持的证书信息（证书中包含公钥）传送一份给客户端。</li><li>客户端的服务器开始协商SSL连接的安全等级，也就是信息加密的等级。</li><li>客户端的浏览器根据双方同意的安全等级，建立会话密钥，然后利用网站的公钥将会话密钥加密，并传送给网站。</li><li>服务器利用自己的私钥解密出会话密钥。</li><li>服务器利用会话密钥加密与客户端之间的通信。</li></ol><h2 id="Request请求数据包数据格式"><a href="#Request请求数据包数据格式" class="headerlink" title="Request请求数据包数据格式"></a>Request请求数据包数据格式</h2><ol><li>请求行：请求类型&#x2F;请求资源路径、协议的版本和类型</li><li>请求头：一些键值对，浏览器与Web服务器之间都可以发送，特定的某种含义</li><li>空行：请求头与请求体之间用一个空行隔开</li><li>请求体：要发送的数据（一般post提交会使用）；例：<code>user=123&amp;pass=123</code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Request Headers</span><br><span class="line">GET / HTTP/1.1 </span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7 </span><br><span class="line">Accept-Encoding: gzip, deflate </span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6 </span><br><span class="line">Cache-Control: max-age=0 </span><br><span class="line">Connection: keep-alive </span><br><span class="line">Cookie: ZDEDebuggerPresent=php,phtml,php3; timezone=8 </span><br><span class="line">Host: xiaodi8.com </span><br><span class="line">Upgrade-Insecure-Requests: 1 </span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36 Edg/116.0.1938.62</span><br></pre></td></tr></table></figure></li></ol><h3 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h3><ol><li>HTTP 规划定义了 8 种可能的请求方法：<ul><li>GET：检索 URL 中标识资源的一个简单请求  </li><li>HEAD：与 GET 方法相同，服务器只返回状态行和头标，并不返回请求文档  </li><li>POST：服务器接受被写入客户端输出流中的数据的请求  </li><li>PUT：服务器保存请求数据作为指定 URL 新内容的请求  </li><li>DELETE：服务器删除 URL 中命令的资源的请求  </li><li>OPTIONS：关于服务器支持的请求方法信息的请求  </li><li>TRACE：web 服务器反馈 Http 请求和其头标的请求  </li><li>CONNECT ：已文档化，但当前未实现的一个方法，预留做隧道处理</li></ul></li></ol><h3 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h3><ol><li>由关键字&#x2F;值对组成，每行一对，关键字和值用冒号分享。请求头标通知服务器腾于客户端的功能和标识。  <ul><li>HOST: 主机或域名地址  </li><li>Accept：指浏览器或其他客户可以接爱的 MIME 文件格式。Servlet 可以根据它判断并返回适当的文件格式。  </li><li>User-Agent：是客户浏览器名称  </li><li>Host：对应网址 URL 中的 Web 名称和端口号。  </li><li>Accept-Langeuage：指出浏览器可以接受的语言种类，如 en 或 en-us，指英语。  </li><li>connection：用来告诉服务器是否可以维持固定的 HTTP 连接。http 是无连接的，HTTP&#x2F;1.1 使用 Keep-Alive为默认值，这样，当浏览器需要多个文件时(比如一个 HTML 文件和相关的图形文件)，不需要每次都建立连接  </li><li>Cookie：浏览器用这个属性向服务器发送 Cookie。Cookie 是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现会话功能。  </li><li>Referer ： 表 明 产 生 请 求 的 网 页 URL 。 如 比 从 网 页 &#x2F;icconcept&#x2F;index.jsp中 点 击 一 个 链 接 到 网 页&#x2F;icwork&#x2F;search ， 在 向 服 务 器 发 送 的 GET&#x2F;icwork&#x2F;search 中 的 请 求 中 ， Referer 是<a href="http://hostname:8080/icconcept/index.jsp%E3%80%82%E8%BF%99%E4%B8%AA%E5%B1%9E%E6%80%A7%E5%8F%AF%E4%BB%A5%E7%94%A8%E6%9D%A5%E8%B7%9F%E8%B8%AA">http://hostname:8080/icconcept/index.jsp。这个属性可以用来跟踪</a> Web 请求是从什么网站来的。  </li><li>Content-Type：用来表名 request 的内容类型。可以用 HttpServletRequest 的 getContentType()方法取得。  </li><li>Accept-Charset：指出浏览器可以接受的字符编码。英文浏览器的默认值是 ISO-8859-1.  </li><li>Accept-Encoding：指出浏览器可以接受的编码方式。编码方式不同于文件格式，它是为了压缩文件并加速文件传递速度。浏览器在接收到 Web 响应之后先解码，然后再检查文件格式。</li></ul></li></ol><h3 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h3><ul><li>最后一个请求头标之后是空行，发送回车符和退行，通知服务器以下不再有头标。</li></ul><h3 id="请求数据"><a href="#请求数据" class="headerlink" title="请求数据"></a>请求数据</h3><ul><li>使用 POST 传送，最常使用的是 Content-Type 和 Content-Length 头标。<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /zb_system/cmd.php?act=search HTTP/1.1 </span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7 </span><br><span class="line">Accept-Encoding: gzip, deflate </span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6 </span><br><span class="line">Cache-Control: max-age=0 </span><br><span class="line">Connection: keep-alive </span><br><span class="line">Content-Length: 3 </span><br><span class="line">Content-Type: application/x-www-form-urlencoded </span><br><span class="line">Cookie: ZDEDebuggerPresent=php,phtml,php3 </span><br><span class="line">Host: www.xiaodi8.com </span><br><span class="line">Origin: http://xiaodi8.com </span><br><span class="line">Referer: http://xiaodi8.com/ </span><br><span class="line">Upgrade-Insecure-Requests: 1 </span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36 Edg/116.0.1938.62</span><br><span class="line"></span><br><span class="line">q=1</span><br></pre></td></tr></table></figure></li></ul><h2 id="Response返回数据包数据格式"><a href="#Response返回数据包数据格式" class="headerlink" title="Response返回数据包数据格式"></a>Response返回数据包数据格式</h2><ul><li>一个响应由四个部分组成；状态行、响应头标、空行、响应数据。</li></ul><ol><li>状态行：协议版本、数字形式的状态代码和状态描述，个元素之间以空格分隔  </li><li>响应头标：包含服务器类型、日期、长度、内容类型等  </li><li>空行：响应头与响应体之间用空行隔开  </li><li>响应数据：浏览器会将实体内容中的数据取出来，生成相应的页面<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Response Header</span><br><span class="line">HTTP/1.1 200 OK </span><br><span class="line">Date: Tue, 29 Aug 2023 07:57:46 GMT </span><br><span class="line">Server: Apache/2.4.46 (Win32) OpenSSL/1.1.1g mod_fcgid/2.3.9a </span><br><span class="line">X-Powered-By: PHP/5.4.45 </span><br><span class="line">Product: Z-BlogPHP 1.6.6 Valyria </span><br><span class="line">X-XSS-Protection: 1; mode=block </span><br><span class="line">Set-Cookie: ZDEDebuggerPresent=php,phtml,php3; path=/ </span><br><span class="line">Upgrade: h2,h2c </span><br><span class="line">Connection: Upgrade, Keep-Alive </span><br><span class="line">Vary: Accept-Encoding </span><br><span class="line">Content-Encoding: gzip </span><br><span class="line">Content-Length: 3157 </span><br><span class="line">Keep-Alive: timeout=5, max=100 </span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br></pre></td></tr></table></figure></li></ol><ul><li>响应数据<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20160122.png" alt="响应数据"></li></ul><h3 id="HTTP响应码"><a href="#HTTP响应码" class="headerlink" title="HTTP响应码"></a>HTTP响应码</h3><pre><code>1xx：信息，请求收到，继续处理  2xx：成功，行为被成功地接受、理解和采纳  3xx：重定向，为了完成请求，必须进一步执行的动作  4xx：客户端错误  5xx：服务器错误-200 存在文件403 存在文件夹3xx 均可能存在404 不存在文件及文件夹500 均可能存在</code></pre><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%201609461.png" alt="响应码"><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-29%20161415.png"></p><hr><p>笔记内容参考自<a href="https://www.yuque.com/weiker/xiaodi">小迪安全</a>、<a href="https://mp.weixin.qq.com/s/hF0sNnZbqnNfSqzZlzYsmA">0x00实验室</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 小迪安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小迪安全 Day01基础入门-概念名词</title>
      <link href="/2023/08/28/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day01%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%A6%82%E5%BF%B5%E5%90%8D%E8%AF%8D/"/>
      <url>/2023/08/28/%E5%B0%8F%E8%BF%AA%E5%AE%89%E5%85%A8%20Day01%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-%E6%A6%82%E5%BF%B5%E5%90%8D%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="概念名词"><a href="#概念名词" class="headerlink" title="概念名词"></a>概念名词</h1><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><h3 id="什么是域名"><a href="#什么是域名" class="headerlink" title="什么是域名"></a>什么是域名</h3><p>相当于网站的名字维基百科对域名的解释是：互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位（有时也指地理位置）。<br>网域名称系统（Domain Name System）有时也简称为域名（DNS），是互联网的一项核心服务，它作为可以将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网，而不用去记住能够被机器直接读取的 IP 地址数据串。</p><h3 id="域名在哪里注册？"><a href="#域名在哪里注册？" class="headerlink" title="域名在哪里注册？"></a>域名在哪里注册？</h3><ol><li>Godaddy</li><li>Gandi</li><li>Hover</li><li>Namesilo</li><li>Namecheap</li><li>万网</li></ol><h3 id="什么是二级域名多级域名？"><a href="#什么是二级域名多级域名？" class="headerlink" title="什么是二级域名多级域名？"></a>什么是二级域名多级域名？</h3><ol><li>顶级域名:又叫一级域名,一串字符串中间一个点隔开,例如 baidu.com。顶级域名是互联网DNS等级之中的最高级的域,它保存于DNS根域的名字空间中。</li><li>二级域名:实际上就是一个一级域名以下的主机名,一串字符串中间两个“.”隔开,例如 <a href="http://www.baidu.com/">www.baidu.com</a> 。二级域名就是最靠近顶级域名左侧的字段。</li><li>三级域名:二级域名的子域名,特征是包含三个“.”,例如___.___.baidu.com…</li></ol><h3 id="域名发现对于安全测试意义？"><a href="#域名发现对于安全测试意义？" class="headerlink" title="域名发现对于安全测试意义？"></a>域名发现对于安全测试意义？</h3><p>进行渗透测试时，其主域名找不到漏洞时，就可以尝试去测试收集到的子域名，有可能测试子域名网站时会有意向不到的效果，然后可以由此横向到主网站。</p><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><h3 id="什么是DNS？"><a href="#什么是DNS？" class="headerlink" title="什么是DNS？"></a>什么是DNS？</h3><p>域名系统(Domain Name System,DNS)是Internet上解决网上机器命名的一种系统。 就像拜访朋友要先知道别人家怎么走一样，Internet上当一台主机要访问另外一台主机时，必须首先获知其地址，TCP&#x2F;IP中的IP地址是由四段以“.”分开的数字组成(此处以IPv4的地址为例，IPv6的地址同理)，记起来总是不如名字那么方便，所以，就采用了域名系统来管理名字和IP的对应关系。</p><h3 id="本地Hosts与DNS的关系"><a href="#本地Hosts与DNS的关系" class="headerlink" title="本地Hosts与DNS的关系"></a>本地Hosts与DNS的关系</h3><ol><li>Hosts文件主要作用是定义IP地址和主机名的映射关系，是一个映射IP地址和主机名的规定。</li><li>Hosts是一个没有扩展名的系统文件，可以用记事本等工具打开，其作用就是将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS域名解析服务器进行IP地址的解析。</li><li>浏览器访问网站，要首先通过DNS服务器把要访问的网站域名解析成一个唯一的IP地址，之后，浏览器才能对此网站进行定位并且访问其数据。<br><strong>如何查看本地Hosts文件：</strong></li><li><code>Win</code> + <code>R</code>：打开运行输入<code>drivers</code></li><li>输入：<code>c:\windows\system32\drivers\etc</code></li><li>选择使用<code>记事本</code>或者<code>Notepad</code>、<code>Vs Code</code> 等编程软件打开<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-28%20143352.png" alt="截图"></li></ol><h3 id="CDN是什么？与DNS的关系？"><a href="#CDN是什么？与DNS的关系？" class="headerlink" title="CDN是什么？与DNS的关系？"></a>CDN是什么？与DNS的关系？</h3><ol><li>CDN的全称是Content DeliveryNetwork，即内容分发网络。</li><li>CDN的基本思路：是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。</li><li>通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上（单纯只使用DNS解析，直接PING就会显示出自己的真实IP,如果又使用CDN，PING出来的IP就不是用户的真实IP而是CDN服务器的IP节点。需要绕过CDN后去找真实IP地址。</li><li>使用CDN的目的：是使用户可就近取得所需内容，解决Internet网络拥挤的状况，提高用户访问网站的响应速度。<br>通过超级ping的网站可以看到CDN的解析情况<a href="https://www.ping.cn/ping/cdivtc.com">https://www.ping.cn/ping/cdivtc.com</a><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-28%20144311.png" alt="截图"><br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-28%20144614.png" alt="截图"></li></ol><h3 id="常见的DNS安全攻击有哪些？"><a href="#常见的DNS安全攻击有哪些？" class="headerlink" title="常见的DNS安全攻击有哪些？"></a>常见的DNS安全攻击有哪些？</h3><h4 id="DDOS"><a href="#DDOS" class="headerlink" title="DDOS"></a>DDOS</h4><p>DDoS攻击也叫做分布式拒绝服务攻击，可以使很多的计算机在同一时间遭受到攻击，使攻击的目标无法正常使用。攻击者可以伪造自己的DNS服务器地址，同时发送大量请求给其他服务器。其他服务器的回复会被发送到被伪造服务器的真实地址，造成该服务器无法处理请求而崩溃。攻击者同样可以通过利用DNS协议中存在的漏洞，恶意创造一个载荷过大的请求，造成目标DNS服务器崩溃。</p><h4 id="DNS缓存中毒"><a href="#DNS缓存中毒" class="headerlink" title="DNS缓存中毒"></a>DNS缓存中毒</h4><p>DNS缓存中毒攻击者给DNS服务器注入非法网络域名地址，如果服务器接受这个非法地址，那说明其缓存就被攻击了，而且以后响应的域名请求将会受黑客所控。当这些非法地址进入服务器缓存，用户的浏览器或者邮件服务器就会自动跳转到DNS指定的地址。这种攻击往往被归类为域欺骗攻击(pharming attack)，由此它会导致出现很多严重问题。首先，用户往往会以为登陆的是自己熟悉的网站，而它们却并不是。与钓鱼攻击采用非法URL不同的是，这种攻击使用的是合法的URL地址。</p><h4 id="域名劫持（DNS重定向）"><a href="#域名劫持（DNS重定向）" class="headerlink" title="域名劫持（DNS重定向）"></a>域名劫持（DNS重定向）</h4><p>域名劫持是通过攻击域名解析服务器（DNS），或伪造域名解析服务器（DNS）的方法，把目标网站域名解析到错误的地址从而实现用户无法访问目标网站的目的。域名劫持一方面可能影响用户的上网体验，用户被引到假冒的网站进而无法正常浏览网页，而用户量较大的网站域名被劫持后恶劣影响会不断扩大；另一方面用户可能被诱骗到冒牌网站进行登录等操作导致泄露隐私数据。</p><h4 id="DNS查询嗅探"><a href="#DNS查询嗅探" class="headerlink" title="DNS查询嗅探"></a>DNS查询嗅探</h4><ol><li>攻击者主要利用对DNS的配置信息获取网络环境的信息，为之后的攻击做好的准备。</li><li>针对这些情况，我们需要对DNS服务器需要采取特别的安全保护措施，在防火墙网络中，分开设置内部DNS服务器和外部DNS服务器，连接外部服务的外部DNS服务器上不留有对外禁止访问的内部网络系统的服务器，做到内外网络服务器分割。</li></ol><h4 id="ARP欺骗"><a href="#ARP欺骗" class="headerlink" title="ARP欺骗"></a>ARP欺骗</h4><ol><li>ARP攻击就是通过伪造IP地址和MAC地址实现ARP欺骗，能够在网络中产生大量的ARP通信量使网络阻塞，攻击者只要持续不断的发出伪造的ARP响应包就能更改目标主机ARP缓存中的IP-MAC条目，造成网络中断或中间人攻击。ARP攻击主要是存在于局域网网络中，局域网中若有一台计算机感染ARP病毒，则感染该ARP病毒的系统将会试图通过”ARP欺骗”手段截获所在网络内其它计算机的通信信息，并因此造成网内其它计算机的通信故障。</li><li>ARP欺骗通常是在用户局网中，造成用户访问域名的错误指向。如果IDC机房也被ARP病毒入侵后，则也可能出现攻击者采用ARP包压制正常主机、或者压制DNS服务器，以使访问导向错误指向的情况。</li></ol><h4 id="本机劫持"><a href="#本机劫持" class="headerlink" title="本机劫持"></a>本机劫持</h4><p>本机的计算机系统被木马或流氓软件感染后，也可能会出现部分域名的访问异常。</p><h2 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h2><h3 id="常见脚本语言"><a href="#常见脚本语言" class="headerlink" title="常见脚本语言"></a>常见脚本语言</h3><ol><li>一种介乎于 <code>HTML</code> 和诸如 <code>Java</code> 、 <code>Visual Basic</code> 、 <code>C++</code>等编程语言之间的一种特殊的语言。</li><li>尽管它更接近后者，但它却不具有编程语言复杂、严谨的语法和规则。</li><li>常见的脚本语言有：<code>Python</code>、<code>JavaScript</code>、<code>Asp</code> (逐渐淘汰，基本都是小站点在使用)、<code>Aspx</code>、<code>PHP</code> （目前比较流行）<code>javaweb</code>、 <code>pl</code>、<code>cgi</code>等</li></ol><h3 id="不同脚本类型与安全漏洞的关系"><a href="#不同脚本类型与安全漏洞的关系" class="headerlink" title="不同脚本类型与安全漏洞的关系"></a>不同脚本类型与安全漏洞的关系</h3><ul><li>不同的脚本语言的编写规则不一样，程序产生的漏洞自然也不一样（代码审计）。</li></ul><h3 id="漏洞挖掘代码审计与脚本类型的关系"><a href="#漏洞挖掘代码审计与脚本类型的关系" class="headerlink" title="漏洞挖掘代码审计与脚本类型的关系"></a>漏洞挖掘代码审计与脚本类型的关系</h3><ul><li>漏洞挖掘代码审计：要熟悉相关代码和相关逻辑机制</li></ul><h2 id="后门"><a href="#后门" class="headerlink" title="后门"></a>后门</h2><h3 id="什么是后门？有那些后门？"><a href="#什么是后门？有那些后门？" class="headerlink" title="什么是后门？有那些后门？"></a>什么是后门？有那些后门？</h3><ol><li>在信息安全领域，后门是指绕过安全控制而获取对程序或系统访问权的方法。</li><li>后门的最主要目的就是方便以后再次秘密进入或者控制系统。</li></ol><h3 id="后门的分类"><a href="#后门的分类" class="headerlink" title="后门的分类"></a>后门的分类</h3><ol><li><p>网页后门 ：<br> 此类后门程序一般都是服务器上正常 的web服务来构造自己的连接方式，比如现在非常流行的ASP、cgi脚本后门等。</p></li><li><p>线程插入后门：<br> 利用系统自身的某个服务或者线程，将后门程序插入到其中，具体原理原来《黑客防线》曾具体讲解过，感兴趣的朋友可以查阅。这也是现在最流行的一个后门技术。</p></li><li><p>扩展后门：<br> 所谓的“扩展”，是指在功能上有大的提升，比普通的单一功能的后门有很强的使用性，这种后门本身就相当于一个小的安全工具包，能实现非常多的常驻见安全功能，适合新手使用————但是，功能越强，个人觉得反而脱郭后门“隐蔽”的初衷，具体看法就看各位使用都的喜好了。</p></li><li><p>C&#x2F;S后门（客户端服务器后门）：<br> 和传统的木马程序类似的控制方法，采用“客记端&#x2F;服务端”的控制方式，通过某种特定的访问方式来启动后门进而控制服务器。</p></li></ol><h3 id="后门在安全测试中的实际意义"><a href="#后门在安全测试中的实际意义" class="headerlink" title="后门在安全测试中的实际意义"></a>后门在安全测试中的实际意义</h3><ol><li>方便下次更方便的进来。</li><li>获取到相关权限之后，后门相当于一个管道，便于操作。</li><li>即使管理员通过改变所有密码之类的方法来提高安全性，仍然能再次侵入，使再次侵入被发现的可能性减至最低。</li><li>大多数后门设法躲过日志，大多数情况下即使入侵者正在使用系统也无法显示他已在线。</li></ol><h3 id="关于后门需要了解那些？-玩法，免杀"><a href="#关于后门需要了解那些？-玩法，免杀" class="headerlink" title="关于后门需要了解那些？(玩法，免杀)"></a>关于后门需要了解那些？(玩法，免杀)</h3><ol><li><p>玩法（创建后门之后我们可以怎么样操作？）<br> 网站后门：便于控制网站<br> 软件后门：用于控制<br> 服务器后门：可以进行脱库、盗取信息</p></li><li><p>免杀技术全称为反杀毒技术Anti Anti-Virus简称“免杀”，它指的是一种能使病毒木马免于被杀毒软件查杀的技术。</p></li><li><p>由于免杀技术的涉猎面非常广，其中包含反汇编、逆向工程、系统漏洞等黑客技术，所以难度很高，一般人不会或没能力接触这技术的深层内容。</p></li><li><p>其内容基本上都是修改病毒、木马的内容改变特征码，从而躲避了杀毒软件的查杀。</p></li><li><p>后门需要掌握的核心技能，防止杀毒软件检查到</p></li></ol><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="web的组成框架模型"><a href="#web的组成框架模型" class="headerlink" title="web的组成框架模型"></a>web的组成框架模型</h3><ul><li>WEB的组成框架模型：网站原码、操作系统、中间件（搭建平台，提供服务的）、数据库。<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/web%E7%9A%84%E7%BB%84%E6%88%90%E6%A1%86%E6%9E%B6.png" alt="Web的组成框架"></li></ul><h3 id="架构漏洞安全测试的简要测试"><a href="#架构漏洞安全测试的简要测试" class="headerlink" title="架构漏洞安全测试的简要测试"></a>架构漏洞安全测试的简要测试</h3><ol><li><p>通信层<br> 主要测试通信协议的安全，系统开放的端口，其中操作系统提供网络层和数据链路层协议，存在问题的可能性较小，一般关注开源协议已存在漏洞即可，无需重点关注。应用层服务与协议一般由产品形态决定，产品中可以自定义配置相关协议与参数，需要重点关注与测试。</p></li><li><p>应用层<br> 应用层包含开发人员开发代码，为整个安全测试的核心模块。主要包括web安全测试，源码安全测试。其中web安全测试从web访问服务的维度，偏向黑盒，进行安全测试。源码安全测试从代码的维度，偏向白盒，进行安全测试。</p></li><li><p>系统层<br> 主要测试操作系统安全，数据库服务安全，web服务器安全，以及其他一些中间件的安全。</p></li><li><p>管理层<br> 主要包括产品资料的安全测试，安全策略制定，协调各个层面的安全测试以及安全风险的整体评估。</p></li></ol><h3 id="为什么要从web界面为主"><a href="#为什么要从web界面为主" class="headerlink" title="为什么要从web界面为主"></a>为什么要从web界面为主</h3><p>因为web使用方面广 。从web方向先入手，一步一步的获取最高权限。</p><h2 id="Web相关漏洞"><a href="#Web相关漏洞" class="headerlink" title="Web相关漏洞"></a>Web相关漏洞</h2><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/web%E6%BC%8F%E6%B4%9E.png" alt="Web相关漏洞"></p><h2 id="演示案例"><a href="#演示案例" class="headerlink" title="演示案例"></a>演示案例</h2><h3 id="多级域名的枚举查找"><a href="#多级域名的枚举查找" class="headerlink" title="多级域名的枚举查找"></a>多级域名的枚举查找</h3><ul><li>layer子域名探测<br>链接：<a href="https://pan.baidu.com/s/1YFu9V0WtdG905eaVFNFa0A">https://pan.baidu.com/s/1YFu9V0WtdG905eaVFNFa0A</a><br>提取码：zkaq<br><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-28%20201908.png" alt="layer子域名挖掘机"></li></ul><hr><p>笔记内容参考自<a href="https://www.yuque.com/weiker/xiaodi">小迪安全</a></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 小迪安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有关于我的</title>
      <link href="/2023/08/25/%E6%9C%89%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84/"/>
      <url>/2023/08/25/%E6%9C%89%E5%85%B3%E4%BA%8E%E6%88%91%E7%9A%84/</url>
      
        <content type="html"><![CDATA[<h1 id="有关于我的"><a href="#有关于我的" class="headerlink" title="有关于我的"></a>有关于我的</h1><hr><p><img src="https://alien-blog.oss-cn-beijing.aliyuncs.com/%E6%A2%A6%E6%AF%94%E4%BC%98%E6%96%AF.jpg" alt="Alien"></p><blockquote><p>永远相信美好的事情即将发生，因为追求源于热爱！</p></blockquote><h3 id="关于Alien"><a href="#关于Alien" class="headerlink" title="关于Alien"></a>关于Alien</h3><p>你好，我叫Alien，是个在校大学生，开发者，2021年开始学习相关开发知识。</p><ul><li><strong>就读院校：</strong> 东莞理工学院（是本科！！！）</li><li><strong>本科专业：</strong> 网络空间安全</li><li><strong>个人爱好：</strong> 听歌、看电影、奥特曼、游戏</li></ul><h3 id="细说个人爱好"><a href="#细说个人爱好" class="headerlink" title="细说个人爱好"></a>细说个人爱好</h3><p>喜欢的音乐人主要是周杰伦、林俊杰、陈奕迅、五月天、张杰、Zard坂井泉水（我女神）、久石让（他的音乐真的很好听）、Radwimps、米津玄师，平时没事就听歌，可以说是个终身爱好了。<br>喜欢的电影有幽灵公主（强烈推荐）、哈尔的移动城堡、天空之城。（很不巧，都是宫崎骏的）<br>游戏玩的不多，像云顶之弈这种比较多人玩，比较喜欢单机的游戏，比如极限竞速：地平线、塞尔达传说：王国之泪、GTA5。<br>应该没有人不喜欢奥特曼吧！（\狗头）</p><h3 id="怎样能够联系到我呢？"><a href="#怎样能够联系到我呢？" class="headerlink" title="怎样能够联系到我呢？"></a>怎样能够联系到我呢？</h3><p>邮箱：<a href="mailto:&#x31;&#x31;&#57;&#51;&#x31;&#51;&#51;&#49;&#x30;&#53;&#x40;&#113;&#x71;&#46;&#99;&#111;&#x6d;">&#x31;&#x31;&#57;&#51;&#x31;&#51;&#51;&#49;&#x30;&#53;&#x40;&#113;&#x71;&#46;&#99;&#111;&#x6d;</a><br>Github：<a href="https://github.com/M78Alien">M78Alien</a><br>B站：<a href="https://space.bilibili.com/360390916?spm_id_from=333.1007.0.0">Alien船长大人</a></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
